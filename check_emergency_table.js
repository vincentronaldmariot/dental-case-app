const axios = require('axios');

const ONLINE_SERVER_URL = 'https://afp-dental-app-production.up.railway.app';

async function checkEmergencyTable() {
  try {
    console.log('üîç Checking Emergency Records Table...\n');

    // Step 1: Login as admin
    console.log('1Ô∏è‚É£ Logging in as admin...');
    const adminLoginResponse = await axios.post(`${ONLINE_SERVER_URL}/api/auth/admin/login`, {
      username: 'admin',
      password: 'admin123'
    });

    const adminToken = adminLoginResponse.data.token;
    console.log('‚úÖ Admin logged in');

    // Step 2: Check if emergency_records table exists
    console.log('\n2Ô∏è‚É£ Checking emergency_records table structure...');
    try {
      const tableCheckResponse = await axios.get(`${ONLINE_SERVER_URL}/api/admin/check-table/emergency_records`, {
        headers: { Authorization: `Bearer ${adminToken}` }
      });

      console.log('‚úÖ Table structure check response:', tableCheckResponse.data);

    } catch (error) {
      console.log('‚ùå Table structure check failed');
      console.log(`   Error: ${error.response?.status} - ${error.response?.data?.error || error.message}`);
    }

    // Step 3: Try to get emergency records with error details
    console.log('\n3Ô∏è‚É£ Testing emergency records with detailed error...');
    try {
      const emergencyResponse = await axios.get(`${ONLINE_SERVER_URL}/api/admin/emergency`, {
        headers: { Authorization: `Bearer ${adminToken}` }
      });

      console.log('‚úÖ Emergency records retrieved successfully');
      console.log(`üìä Found ${emergencyResponse.data.emergencyRecords?.length || 0} records`);

    } catch (error) {
      console.log('‚ùå Emergency records failed with details:');
      console.log(`   Status: ${error.response?.status}`);
      console.log(`   Error: ${error.response?.data?.error || error.message}`);
      
      if (error.response?.data?.details) {
        console.log(`   Details: ${JSON.stringify(error.response.data.details, null, 2)}`);
      }
    }

    // Step 4: Check if there are any emergency records at all
    console.log('\n4Ô∏è‚É£ Checking for any emergency records...');
    try {
      const simpleCheckResponse = await axios.get(`${ONLINE_SERVER_URL}/api/admin/emergency?limit=1`, {
        headers: { Authorization: `Bearer ${adminToken}` }
      });

      console.log('‚úÖ Simple emergency check successful');
      console.log('Response:', simpleCheckResponse.data);

    } catch (error) {
      console.log('‚ùå Simple emergency check failed');
      console.log(`   Error: ${error.response?.status} - ${error.response?.data?.error || error.message}`);
    }

    console.log('\nüìã EMERGENCY TABLE SUMMARY:');
    console.log('   ‚Ä¢ Admin authentication: ‚úÖ');
    console.log('   ‚Ä¢ Table structure: ‚ö†Ô∏è (needs verification)');
    console.log('   ‚Ä¢ Emergency records endpoint: ‚ùå (500 error)');
    console.log('   ‚Ä¢ Database connection: ‚ö†Ô∏è (needs verification)');

  } catch (error) {
    console.error('‚ùå Check failed:', error.response?.data || error.message);
  }
}

checkEmergencyTable(); 